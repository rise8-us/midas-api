plugins {
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'org.flywaydb.flyway' version '6.4.4'
    id 'antlr'
    id 'checkstyle'
    id 'jacoco'
}

group = "mil.af.abms"
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

flyway {
    driver = 'com.mysql.cj.jdbc.Driver'
    url = "jdbc:mysql://${System.env.MYSQL_HOST}:${System.env.MYSQL_PORT}/${System.env.MYSQL_DB_NAME}?useSSL=false"
    user = "${System.env.MYSQL_DB_ADMIN_USER}"
    password = "${System.env.MYSQL_DB_ADMIN_PASSWORD}"
    table = "${System.env.MYSQL_DB_NAME}"
}

sourceSets {
    main {
        java {
            srcDir "${buildDir.absolutePath}/generated-src/antlr/main"
        }
    }
}

dependencies {
    antlr 'org.antlr:antlr4:4.9.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.hibernate:hibernate-validator:7.0.0.Final'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.auth0:java-jwt:3.12.1'
    implementation 'org.gitlab4j:gitlab4j-api:4.15.7'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2:1.4.199'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

generateGrammarSource {
    arguments += ["-visitor", "-no-listener","-package", "mil.af.abms.midas.api.search"]

    doLast {
        copy {
            from 'build/generated-src/antlr/main/'
            include '*.*'
            into "build/generated-src/antlr/main/mil/af/abms/midas/api/search"
        }
        project.delete fileTree('build/generated-src/antlr/main').include('*.*')
    }
}
compileJava.dependsOn generateGrammarSource

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
        exceptionFormat 'full'
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "mil/af/abms/midas/api/search/RestQueryBaseVisitor**",  //Generated by ANTLR
                    "mil/af/abms/midas/api/search/RestQueryParser**",       //      |
                    "mil/af/abms/midas/api/search/RestQueryLexer**",        //Generate by ANTLR
                    "**/dto/**DTO**",
                    "mil/af/abms/midas/clients/GitLab4JClient**",
                    "mil/af/abms/midas/exception**",
                    "mil/af/abms/midas/config**"
            ])
        }))
    }
    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled true
    }
    dependsOn test
}

checkstyleMain.source = "src/main/java"

